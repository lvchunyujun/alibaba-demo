package com.hexiaofei.pubapi.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class EmployeesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public EmployeesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFnameIsNull() {
            addCriterion("fname is null");
            return (Criteria) this;
        }

        public Criteria andFnameIsNotNull() {
            addCriterion("fname is not null");
            return (Criteria) this;
        }

        public Criteria andFnameEqualTo(String value) {
            addCriterion("fname =", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotEqualTo(String value) {
            addCriterion("fname <>", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThan(String value) {
            addCriterion("fname >", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameGreaterThanOrEqualTo(String value) {
            addCriterion("fname >=", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLessThan(String value) {
            addCriterion("fname <", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLessThanOrEqualTo(String value) {
            addCriterion("fname <=", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameLike(String value) {
            addCriterion("fname like", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotLike(String value) {
            addCriterion("fname not like", value, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameIn(List<String> values) {
            addCriterion("fname in", values, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotIn(List<String> values) {
            addCriterion("fname not in", values, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameBetween(String value1, String value2) {
            addCriterion("fname between", value1, value2, "fname");
            return (Criteria) this;
        }

        public Criteria andFnameNotBetween(String value1, String value2) {
            addCriterion("fname not between", value1, value2, "fname");
            return (Criteria) this;
        }

        public Criteria andLnameIsNull() {
            addCriterion("lname is null");
            return (Criteria) this;
        }

        public Criteria andLnameIsNotNull() {
            addCriterion("lname is not null");
            return (Criteria) this;
        }

        public Criteria andLnameEqualTo(String value) {
            addCriterion("lname =", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameNotEqualTo(String value) {
            addCriterion("lname <>", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameGreaterThan(String value) {
            addCriterion("lname >", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameGreaterThanOrEqualTo(String value) {
            addCriterion("lname >=", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameLessThan(String value) {
            addCriterion("lname <", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameLessThanOrEqualTo(String value) {
            addCriterion("lname <=", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameLike(String value) {
            addCriterion("lname like", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameNotLike(String value) {
            addCriterion("lname not like", value, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameIn(List<String> values) {
            addCriterion("lname in", values, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameNotIn(List<String> values) {
            addCriterion("lname not in", values, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameBetween(String value1, String value2) {
            addCriterion("lname between", value1, value2, "lname");
            return (Criteria) this;
        }

        public Criteria andLnameNotBetween(String value1, String value2) {
            addCriterion("lname not between", value1, value2, "lname");
            return (Criteria) this;
        }

        public Criteria andHiredIsNull() {
            addCriterion("hired is null");
            return (Criteria) this;
        }

        public Criteria andHiredIsNotNull() {
            addCriterion("hired is not null");
            return (Criteria) this;
        }

        public Criteria andHiredEqualTo(Date value) {
            addCriterionForJDBCDate("hired =", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredNotEqualTo(Date value) {
            addCriterionForJDBCDate("hired <>", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredGreaterThan(Date value) {
            addCriterionForJDBCDate("hired >", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hired >=", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredLessThan(Date value) {
            addCriterionForJDBCDate("hired <", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("hired <=", value, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredIn(List<Date> values) {
            addCriterionForJDBCDate("hired in", values, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredNotIn(List<Date> values) {
            addCriterionForJDBCDate("hired not in", values, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hired between", value1, value2, "hired");
            return (Criteria) this;
        }

        public Criteria andHiredNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("hired not between", value1, value2, "hired");
            return (Criteria) this;
        }

        public Criteria andSeparatedIsNull() {
            addCriterion("separated is null");
            return (Criteria) this;
        }

        public Criteria andSeparatedIsNotNull() {
            addCriterion("separated is not null");
            return (Criteria) this;
        }

        public Criteria andSeparatedEqualTo(Date value) {
            addCriterionForJDBCDate("separated =", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedNotEqualTo(Date value) {
            addCriterionForJDBCDate("separated <>", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedGreaterThan(Date value) {
            addCriterionForJDBCDate("separated >", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("separated >=", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedLessThan(Date value) {
            addCriterionForJDBCDate("separated <", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("separated <=", value, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedIn(List<Date> values) {
            addCriterionForJDBCDate("separated in", values, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedNotIn(List<Date> values) {
            addCriterionForJDBCDate("separated not in", values, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("separated between", value1, value2, "separated");
            return (Criteria) this;
        }

        public Criteria andSeparatedNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("separated not between", value1, value2, "separated");
            return (Criteria) this;
        }

        public Criteria andJob_codeIsNull() {
            addCriterion("job_code is null");
            return (Criteria) this;
        }

        public Criteria andJob_codeIsNotNull() {
            addCriterion("job_code is not null");
            return (Criteria) this;
        }

        public Criteria andJob_codeEqualTo(Integer value) {
            addCriterion("job_code =", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeNotEqualTo(Integer value) {
            addCriterion("job_code <>", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeGreaterThan(Integer value) {
            addCriterion("job_code >", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeGreaterThanOrEqualTo(Integer value) {
            addCriterion("job_code >=", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeLessThan(Integer value) {
            addCriterion("job_code <", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeLessThanOrEqualTo(Integer value) {
            addCriterion("job_code <=", value, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeIn(List<Integer> values) {
            addCriterion("job_code in", values, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeNotIn(List<Integer> values) {
            addCriterion("job_code not in", values, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeBetween(Integer value1, Integer value2) {
            addCriterion("job_code between", value1, value2, "job_code");
            return (Criteria) this;
        }

        public Criteria andJob_codeNotBetween(Integer value1, Integer value2) {
            addCriterion("job_code not between", value1, value2, "job_code");
            return (Criteria) this;
        }

        public Criteria andStore_idIsNull() {
            addCriterion("store_id is null");
            return (Criteria) this;
        }

        public Criteria andStore_idIsNotNull() {
            addCriterion("store_id is not null");
            return (Criteria) this;
        }

        public Criteria andStore_idEqualTo(Integer value) {
            addCriterion("store_id =", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idNotEqualTo(Integer value) {
            addCriterion("store_id <>", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idGreaterThan(Integer value) {
            addCriterion("store_id >", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("store_id >=", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idLessThan(Integer value) {
            addCriterion("store_id <", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idLessThanOrEqualTo(Integer value) {
            addCriterion("store_id <=", value, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idIn(List<Integer> values) {
            addCriterion("store_id in", values, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idNotIn(List<Integer> values) {
            addCriterion("store_id not in", values, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idBetween(Integer value1, Integer value2) {
            addCriterion("store_id between", value1, value2, "store_id");
            return (Criteria) this;
        }

        public Criteria andStore_idNotBetween(Integer value1, Integer value2) {
            addCriterion("store_id not between", value1, value2, "store_id");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employees
     *
     * @mbggenerated do_not_delete_during_merge Sun Dec 19 11:49:22 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table employees
     *
     * @mbggenerated Sun Dec 19 11:49:22 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}